{"remainingRequest":"/home/arthur/Videos/regendary/node_modules/babel-loader/lib/index.js!/home/arthur/Videos/regendary/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/arthur/Videos/regendary/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arthur/Videos/regendary/src/components/RandomChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arthur/Videos/regendary/src/components/RandomChart.vue","mtime":1537552868976},{"path":"/home/arthur/Videos/regendary/node_modules/cache-loader/dist/cjs.js","mtime":1537410374753},{"path":"/home/arthur/Videos/regendary/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/arthur/Videos/regendary/node_modules/cache-loader/dist/cjs.js","mtime":1537410374753},{"path":"/home/arthur/Videos/regendary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\nimport LineChart from './LineChart.js';\nexport default {\n  components: {\n    LineChart: LineChart\n  },\n  data: function data() {\n    return {\n      datacollection: {\n        labels: ['Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality'],\n        datasets: [{\n          label: 'Data One',\n          backgroundColor: '#2857ff',\n          pointBackgroundColor: 'rgba(255,255,255, 0.9)',\n          borderWidth: 1,\n          pointBorderColor: 'rgba(255,255,255, 0.5)',\n          data: [40, 20, 30, 50, 90, 10, 20, 40, 50, 70, 90, 100]\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            display: false,\n            ticks: {\n              beginAtZero: true,\n              display: false\n            },\n            gridLines: {\n              display: false\n            }\n          }],\n          xAxes: [{\n            display: false,\n            ticks: {\n              beginAtZero: false,\n              fontSize: 20\n            },\n            gridLines: {\n              display: false\n            }\n          }]\n        },\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'single',\n          callbacks: {\n            label: function label(tooltipItems, data) {\n              return tooltipItems.yLabel + \"%\";\n            }\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        height: 100\n      }\n    };\n  },\n  mounted: function mounted() {},\n  methods: {}\n};",{"version":3,"sources":["RandomChart.vue"],"names":[],"mappings":";;;;;;;;;AAOA,OAAA,SAAA,MAAA,gBAAA;AAEA,eAAA;AACA,cAAA;AACA;AADA,GADA;AAIA,QAAA;AAAA,WAAA;AACA,sBAAA;AACA,gBAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CADA;AAEA,kBAAA,CACA;AACA,iBAAA,UADA;AAEA,2BAAA,SAFA;AAGA,gCAAA,wBAHA;AAIA,uBAAA,CAJA;AAMA,4BAAA,wBANA;AAOA,gBAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA;AAPA,SADA;AAFA,OADA;AAgBA,eAAA;AACA,gBAAA;AACA,iBAAA,CAAA;AACA,qBAAA,KADA;AAEA,mBAAA;AACA,2BAAA,IADA;AAEA,uBAAA;AAFA,aAFA;AAMA,uBAAA;AACA,uBAAA;AADA;AANA,WAAA,CADA;AAWA,iBAAA,CAAA;AACA,qBAAA,KADA;AAEA,mBAAA;AACA,2BAAA,KADA;AAEA,wBAAA;AAFA,aAFA;AAMA,uBAAA;AACA,uBAAA;AADA;AANA,WAAA;AAXA,SADA;AAuBA,gBAAA;AACA,mBAAA;AADA,SAvBA;AA0BA,kBAAA;AACA,mBAAA,IADA;AAEA,gBAAA,QAFA;AAGA,qBAAA;AACA,mBAAA,eAAA,YAAA,EAAA,IAAA,EAAA;AACA,qBAAA,aAAA,MAAA,GAAA,GAAA;AACA;AAHA;AAHA,SA1BA;AAoCA,oBAAA,IApCA;AAqCA,6BAAA,KArCA;AAsCA,gBAAA;AAtCA;AAhBA,KAAA;AAAA,GAJA;AA6DA,SA7DA,qBA6DA,CAEA,CA/DA;AAgEA,WAAA;AAhEA,CAAA","sourcesContent":["<template>\n  <div class=\"small\">\n    <line-chart :chart-data=\"datacollection\" :options=\"options\" :width=\"600\" :height=\"120\"></line-chart>\n  </div>\n</template>\n\n<script>\n  import LineChart from './LineChart.js'\n\n  export default {\n    components: {\n      LineChart\n    },\n    data: ()=>({\n      datacollection: {\n        labels: ['Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality', 'Quality'],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Data One',\n\t\t\t\t\t\tbackgroundColor: '#2857ff',\n\t\t\t\t\t\tpointBackgroundColor: 'rgba(255,255,255, 0.9)',\n            borderWidth: 1,\n    \n\t\t\t\t\t\tpointBorderColor: 'rgba(255,255,255, 0.5)',\n\t\t\t\t\t\tdata: [40, 20, 30, 50, 90, 10, 20, 40, 50, 70, 90, 100]\n\t\t\t\t\t}\n        ]\n      },\n        \n        options: {\n          scales: {\n            yAxes: [{\n              display: false,\n              ticks: {\n                beginAtZero: true,\n                display: false\n              },\n              gridLines: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              display: false,\n              ticks: {\n                beginAtZero: false,\n                fontSize:20\n              },\n              gridLines: {\n                display: false\n              }\n            }]\n          },\n          legend: {\n            display: false\n          },\n          tooltips: {\n            enabled: true,\n            mode: 'single',\n            callbacks: {\n              label: function(tooltipItems, data) {\n                return tooltipItems.yLabel+\"%\";\n              }\n            },\n            \n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          height: 100\n        }\n    }),\n    mounted () {\n      \n    },\n    methods: {\n      \n    }\n  }\n</script>\n\n<style>\n  .small {\n    max-width: 600px;\n    \n    \n  }\n</style>"],"sourceRoot":"src/components"}]}